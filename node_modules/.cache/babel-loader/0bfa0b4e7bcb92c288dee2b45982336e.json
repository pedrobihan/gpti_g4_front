{"ast":null,"code":"var _jsxFileName = \"/Users/mariozegers/Desktop/GPTI/gpti_g4_front/src/components/querys.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { Table, Container } from 'react-bootstrap';\nimport '../styles/Table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Querys() {\n  _s();\n  const [data, setData] = useState({});\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    axios('/querys').then(response => {\n      setData(response.data);\n      // console.log(\"Data city:\", response.data)\n    }).catch(error => {\n      console.error(\"Error fetching data: \", error);\n      setError(error);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, []);\n  if (error) {\n    console.log(error);\n  }\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n  let common_names = {};\n  let common_types = {};\n  let common_names_dict = {};\n  let common_types_dict = {};\n  if (data && data.querys) {\n    // top 3 names most common 'name' inside querys[i] and top 3 most common 'type' of querys\n    for (let i = 0; i < data.querys.length; i++) {\n      console.log(data.querys[i].city);\n      if (common_names[data.querys[i].name]) {\n        common_names[data.querys[i].name] += 1;\n      } else {\n        common_names[data.querys[i].name] = 1;\n      }\n      if (common_types[data.querys[i].type]) {\n        common_types[data.querys[i].type] += 1;\n      } else {\n        common_types[data.querys[i].type] = 1;\n      }\n    }\n    // get the 3 most common names in object with name and count\n    let common_names_array = [];\n    for (let name in common_names) {\n      common_names_array.push({\n        name: name,\n        count: common_names[name]\n      });\n    }\n    common_names_array.sort((a, b) => b.count - a.count);\n    common_names_array = common_names_array.slice(0, 3);\n    for (let i = 0; i < common_names_array.length; i++) {\n      common_names_dict[common_names_array[i].name] = common_names_array[i].count;\n    }\n\n    // get the 3 most common types in object with type and count\n    let common_types_array = [];\n    for (let type in common_types) {\n      common_types_array.push({\n        type: type,\n        count: common_types[type]\n      });\n    }\n    common_types_array.sort((a, b) => b.count - a.count);\n    common_types_array = common_types_array.slice(0, 3);\n    for (let i = 0; i < common_types_array.length; i++) {\n      common_types_dict[common_types_array[i].type] = common_types_array[i].count;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"providerProductsTable__container\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex flex-column gap-3 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Top 3 nombres m\\xE1s frecuentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"N\\xFAmero consultas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(common_names_dict).map(_ref => {\n            let [key, value] = _ref;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Top 3 tipos m\\xE1s frecuentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Ciudad\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"N\\xFAmero consultas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(common_types_dict).map(_ref2 => {\n            let [key, value] = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: key\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(Querys, \"JLv4W9d/R7a0qzKtHdTlMLNl4K8=\");\n_c = Querys;\nexport default Querys;\nvar _c;\n$RefreshReg$(_c, \"Querys\");","map":{"version":3,"names":["useEffect","useState","axios","Table","Container","Querys","data","setData","error","setError","loading","setLoading","then","response","catch","console","finally","log","common_names","common_types","common_names_dict","common_types_dict","querys","i","length","city","name","type","common_names_array","push","count","sort","a","b","slice","common_types_array","Object","entries","map","key","value"],"sources":["/Users/mariozegers/Desktop/GPTI/gpti_g4_front/src/components/querys.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport { Table, Container } from 'react-bootstrap';\nimport '../styles/Table.css';\n\nfunction Querys() {\n    const [data, setData] = useState({});\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        axios('/querys')\n            .then(response => {\n                setData(response.data);\n                // console.log(\"Data city:\", response.data)\n            })\n            .catch(error => {\n                console.error(\"Error fetching data: \", error);\n                setError(error);\n            })\n            .finally( () => {\n                setLoading(false)\n            })\n    }, [])\n\n    if (error) {\n        console.log(error)\n    }\n\n    if (loading) return (\n        <div>\n            <h1> Loading...</h1>\n        </div>\n    )\n\n    let common_names = {};\n    let common_types = {};\n    let common_names_dict = {};\n    let common_types_dict = {};\n\n    if (data && data.querys) {\n        // top 3 names most common 'name' inside querys[i] and top 3 most common 'type' of querys\n        for (let i = 0; i < data.querys.length; i++) {\n            console.log(data.querys[i].city)\n            if (common_names[data.querys[i].name]) {\n                common_names[data.querys[i].name] += 1;\n            }\n            else {\n                common_names[data.querys[i].name] = 1;\n            }\n            if (common_types[data.querys[i].type]) {\n                common_types[data.querys[i].type] += 1;\n            }\n            else {\n                common_types[data.querys[i].type] = 1;\n            }\n        }\n        // get the 3 most common names in object with name and count\n        let common_names_array = [];\n        for (let name in common_names) {\n            common_names_array.push({name: name, count: common_names[name]});\n        }\n        common_names_array.sort((a, b) => b.count - a.count);\n        common_names_array = common_names_array.slice(0, 3);\n        for (let i = 0; i < common_names_array.length; i++) {\n            common_names_dict[common_names_array[i].name] = common_names_array[i].count;\n        }\n        \n        // get the 3 most common types in object with type and count\n        let common_types_array = [];\n        for (let type in common_types) {\n            common_types_array.push({type: type, count: common_types[type]});\n        }\n        common_types_array.sort((a, b) => b.count - a.count);\n        common_types_array = common_types_array.slice(0, 3);\n        for (let i = 0; i < common_types_array.length; i++) {\n            common_types_dict[common_types_array[i].type] = common_types_array[i].count;\n        }\n    }\n\n    return (\n        <div className=\"providerProductsTable__container\">\n            <Container className=\"d-flex flex-column gap-3 mt-4\">\n                <h3> Top 3 nombres más frecuentes</h3>\n                <Table >\n                    <thead>\n                        <tr>\n                            <th >Nombre</th>\n                            <th >Número consultas</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.entries(common_names_dict).map(([key, value]) => (\n                            <tr key={key}>\n                                <td >{key}</td>\n                                <td >{value}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n                <h3> Top 3 tipos más frecuentes</h3>\n                <Table >\n                    <thead>\n                        <tr>\n                            <th >Ciudad</th>\n                            <th >Número consultas</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.entries(common_types_dict).map(([key, value]) => (\n                            <tr key={key}>\n                                <td >{key}</td>\n                                <td >{value}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </Container>\n        </div>\n    );\n}\n\n\nexport default Querys;"],"mappings":"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"},"metadata":{},"sourceType":"module"}