{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ReactMinimalPieChart = {}, global.React));\n})(this, function (exports, React) {\n  'use strict';\n\n  function degreesToRadians(degrees) {\n    return degrees * Math.PI / 180;\n  }\n  function valueBetween(value, min, max) {\n    if (value > max) return max;\n    if (value < min) return min;\n    return value;\n  }\n  function extractPercentage(value, percentage) {\n    return percentage / 100 * value;\n  }\n  function bisectorAngle(startAngle, lengthAngle) {\n    return startAngle + lengthAngle / 2;\n  }\n  function shiftVectorAlongAngle(angle, distance) {\n    var angleRadians = degreesToRadians(angle);\n    return {\n      dx: distance * Math.cos(angleRadians),\n      dy: distance * Math.sin(angleRadians)\n    };\n  }\n  function isNumber(value) {\n    return typeof value === 'number';\n  }\n  function functionProp(prop, payload) {\n    return typeof prop === 'function' ? prop(payload) : prop;\n  }\n  function makePropsWithDefaults(props, defaultProps) {\n    var result = Object.assign({}, defaultProps, props);\n\n    // @NOTE Object.assign doesn't default properties with undefined value (like React defaultProps does)\n    for (var key in defaultProps) {\n      if (props[key] === undefined) {\n        result[key] = defaultProps[key];\n      }\n    }\n    return result;\n  }\n  function sumValues(data) {\n    var sum = 0;\n    for (var i = 0; i < data.length; i++) {\n      sum += data[i].value;\n    }\n    return sum;\n  }\n\n  // Append \"percentage\", \"degrees\" and \"startAngle\" to each data entry\n  function extendData(_ref) {\n    var data = _ref.data,\n      totalAngle = _ref.lengthAngle,\n      totalValue = _ref.totalValue,\n      paddingAngle = _ref.paddingAngle,\n      chartStartAngle = _ref.startAngle;\n    var total = totalValue || sumValues(data);\n    var normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n    var numberOfPaddings = Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n    var singlePaddingDegrees = Math.abs(paddingAngle) * Math.sign(totalAngle);\n    var degreesTakenByPadding = singlePaddingDegrees * numberOfPaddings;\n    var degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n    var lastSegmentEnd = 0;\n    var extendedData = [];\n\n    // @NOTE: Shall we evaluate percentage accordingly to dataEntry.value's sign?\n    for (var i = 0; i < data.length; i++) {\n      var dataEntry = data[i];\n      var valueInPercentage = total === 0 ? 0 : dataEntry.value / total * 100;\n      var degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n      var startAngle = lastSegmentEnd + chartStartAngle;\n      lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n      extendedData.push(Object.assign({\n        percentage: valueInPercentage,\n        startAngle: startAngle,\n        degrees: degrees\n      }, dataEntry));\n    }\n    return extendedData;\n  }\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  }\n  function ReactMinimalPieChartLabel(_ref) {\n    var renderLabel = _ref.renderLabel,\n      labelProps = _ref.labelProps;\n    var label = renderLabel(labelProps);\n\n    // Default label\n    if (typeof label === 'string' || typeof label === 'number') {\n      labelProps.dataEntry;\n      labelProps.dataIndex;\n      var props = _objectWithoutPropertiesLoose(labelProps, [\"dataEntry\", \"dataIndex\"]);\n      return /*#__PURE__*/React.createElement(\"text\", Object.assign({\n        dominantBaseline: \"central\"\n      }, props), label);\n    }\n    if (React.isValidElement(label)) {\n      return label;\n    }\n    return null;\n  }\n  function round(number) {\n    var divisor = 1e14; // 14 decimals\n    return Math.round((number + Number.EPSILON) * divisor) / divisor;\n  }\n  function evaluateTextAnchorPosition(_ref) {\n    var labelPosition = _ref.labelPosition,\n      lineWidth = _ref.lineWidth,\n      labelHorizontalShift = _ref.labelHorizontalShift;\n    var dx = round(labelHorizontalShift);\n    // Label in the vertical center\n    if (dx === 0) {\n      return 'middle';\n    }\n    // Outward label\n    if (labelPosition > 100) {\n      return dx > 0 ? 'start' : 'end';\n    }\n    // Inward label\n    var innerRadius = 100 - lineWidth;\n    if (labelPosition < innerRadius) {\n      return dx > 0 ? 'end' : 'start';\n    }\n    // Overlying label\n    return 'middle';\n  }\n  function makeLabelRenderProps(data, props) {\n    return data.map(function (dataEntry, index) {\n      var _functionProp;\n      var segmentsShift = (_functionProp = functionProp(props.segmentsShift, index)) != null ? _functionProp : 0;\n      var distanceFromCenter = extractPercentage(props.radius, props.labelPosition) + segmentsShift;\n      var _shiftVectorAlongAngl = shiftVectorAlongAngle(bisectorAngle(dataEntry.startAngle, dataEntry.degrees), distanceFromCenter),\n        dx = _shiftVectorAlongAngl.dx,\n        dy = _shiftVectorAlongAngl.dy; // This object is passed as argument to the \"label\" function prop\n      var labelRenderProps = {\n        x: props.center[0],\n        y: props.center[1],\n        dx: dx,\n        dy: dy,\n        textAnchor: evaluateTextAnchorPosition({\n          labelPosition: props.labelPosition,\n          lineWidth: props.lineWidth,\n          labelHorizontalShift: dx\n        }),\n        dataEntry: dataEntry,\n        dataIndex: index,\n        style: functionProp(props.labelStyle, index)\n      };\n      return labelRenderProps;\n    });\n  }\n  function renderLabels(data, props) {\n    var label = props.label;\n    if (label) {\n      return makeLabelRenderProps(data, props).map(function (labelRenderProps, index) {\n        return /*#__PURE__*/React.createElement(ReactMinimalPieChartLabel, {\n          key: \"label-\" + (labelRenderProps.dataEntry.key || index),\n          renderLabel: label,\n          labelProps: labelRenderProps\n        });\n      });\n    }\n  }\n\n  // from http://stackoverflow.com/a/18473154\n  var partialCircle = function partialCircle(cx, cy, r, start, end) {\n    var length = end - start;\n    if (length === 0) return [];\n    var fromX = r * Math.cos(start) + cx;\n    var fromY = r * Math.sin(start) + cy;\n    var toX = r * Math.cos(end) + cx;\n    var toY = r * Math.sin(end) + cy;\n    var large = Math.abs(length) <= Math.PI ? '0' : '1';\n    var sweep = length < 0 ? '0' : '1';\n    return [['M', fromX, fromY], ['A', r, r, 0, large, sweep, toX, toY]];\n  };\n  var svgPartialCircle = partialCircle;\n  var partialCircle$1 = svgPartialCircle;\n  function makePathCommands(cx, cy, startAngle, lengthAngle, radius) {\n    var patchedLengthAngle = valueBetween(lengthAngle, -359.999, 359.999);\n    return partialCircle$1(cx, cy,\n    // center X and Y\n    radius, degreesToRadians(startAngle), degreesToRadians(startAngle + patchedLengthAngle)).map(function (command) {\n      return command.join(' ');\n    }).join(' ');\n  }\n  function ReactMinimalPieChartPath(_ref) {\n    var cx = _ref.cx,\n      cy = _ref.cy,\n      lengthAngle = _ref.lengthAngle,\n      lineWidth = _ref.lineWidth,\n      radius = _ref.radius,\n      _ref$shift = _ref.shift,\n      shift = _ref$shift === void 0 ? 0 : _ref$shift,\n      reveal = _ref.reveal,\n      rounded = _ref.rounded,\n      startAngle = _ref.startAngle,\n      title = _ref.title,\n      props = _objectWithoutPropertiesLoose(_ref, [\"cx\", \"cy\", \"lengthAngle\", \"lineWidth\", \"radius\", \"shift\", \"reveal\", \"rounded\", \"startAngle\", \"title\"]);\n    var pathRadius = radius - lineWidth / 2;\n    //@NOTE This shift might be rendered as a translation in future\n    var _shiftVectorAlongAngl = shiftVectorAlongAngle(bisectorAngle(startAngle, lengthAngle), shift),\n      dx = _shiftVectorAlongAngl.dx,\n      dy = _shiftVectorAlongAngl.dy;\n    var pathCommands = makePathCommands(cx + dx, cy + dy, startAngle, lengthAngle, pathRadius);\n    var strokeDasharray;\n    var strokeDashoffset;\n\n    // Animate/hide paths with \"stroke-dasharray\" + \"stroke-dashoffset\"\n    // https://css-tricks.com/svg-line-animation-works/\n    if (isNumber(reveal)) {\n      var pathLength = degreesToRadians(pathRadius) * lengthAngle;\n      strokeDasharray = Math.abs(pathLength);\n      strokeDashoffset = strokeDasharray - extractPercentage(strokeDasharray, reveal);\n    }\n    return /*#__PURE__*/React.createElement(\"path\", Object.assign({\n      d: pathCommands,\n      fill: \"none\",\n      strokeWidth: lineWidth,\n      strokeDasharray: strokeDasharray,\n      strokeDashoffset: strokeDashoffset,\n      strokeLinecap: rounded ? 'round' : undefined\n    }, props), title && /*#__PURE__*/React.createElement(\"title\", null, title));\n  }\n  function combineSegmentTransitionsStyle(duration, easing, customStyle) {\n    // Merge chart's animation CSS transition with \"transition\" found to customStyle\n    var transition = \"stroke-dashoffset \" + duration + \"ms \" + easing;\n    if (customStyle && customStyle.transition) {\n      transition = transition + \",\" + customStyle.transition;\n    }\n    return {\n      transition: transition\n    };\n  }\n  function getRevealValue(props) {\n    //@NOTE When animation is on, chart has to be fully revealed when reveal is not set\n    if (props.animate && !isNumber(props.reveal)) {\n      return 100;\n    }\n    return props.reveal;\n  }\n  function makeEventHandler(eventHandler, payload) {\n    return eventHandler && function (e) {\n      eventHandler(e, payload);\n    };\n  }\n  function renderSegments(data, props, revealOverride) {\n    // @NOTE this should go in Path component. Here for performance reasons\n    var reveal = revealOverride != null ? revealOverride : getRevealValue(props);\n    var radius = props.radius,\n      _props$center = props.center,\n      cx = _props$center[0],\n      cy = _props$center[1];\n    var lineWidth = extractPercentage(radius, props.lineWidth);\n    var paths = data.map(function (dataEntry, index) {\n      var segmentsStyle = functionProp(props.segmentsStyle, index);\n      return /*#__PURE__*/React.createElement(ReactMinimalPieChartPath, {\n        cx: cx,\n        cy: cy,\n        key: dataEntry.key || index,\n        lengthAngle: dataEntry.degrees,\n        lineWidth: lineWidth,\n        radius: radius,\n        rounded: props.rounded,\n        reveal: reveal,\n        shift: functionProp(props.segmentsShift, index),\n        startAngle: dataEntry.startAngle,\n        title: dataEntry.title,\n        style: Object.assign({}, segmentsStyle, props.animate && combineSegmentTransitionsStyle(props.animationDuration, props.animationEasing, segmentsStyle)),\n        stroke: dataEntry.color,\n        tabIndex: props.segmentsTabIndex,\n        onBlur: makeEventHandler(props.onBlur, index),\n        onClick: makeEventHandler(props.onClick, index),\n        onFocus: makeEventHandler(props.onFocus, index),\n        onKeyDown: makeEventHandler(props.onKeyDown, index),\n        onMouseOver: makeEventHandler(props.onMouseOver, index),\n        onMouseOut: makeEventHandler(props.onMouseOut, index)\n      });\n    });\n    if (props.background) {\n      paths.unshift( /*#__PURE__*/React.createElement(ReactMinimalPieChartPath, {\n        cx: cx,\n        cy: cy,\n        key: \"bg\",\n        lengthAngle: props.lengthAngle,\n        lineWidth: lineWidth,\n        radius: radius,\n        rounded: props.rounded,\n        startAngle: props.startAngle,\n        stroke: props.background\n      }));\n    }\n    return paths;\n  }\n  var defaultProps = {\n    animationDuration: 500,\n    animationEasing: 'ease-out',\n    center: [50, 50],\n    data: [],\n    labelPosition: 50,\n    lengthAngle: 360,\n    lineWidth: 100,\n    paddingAngle: 0,\n    radius: 50,\n    startAngle: 0,\n    viewBoxSize: [100, 100]\n  };\n  function ReactMinimalPieChart(originalProps) {\n    var props = makePropsWithDefaults(originalProps,\n    // @ts-expect-error: defaultProps.data is typed as BaseDataEntry\n    defaultProps);\n    var _useState = React.useState(props.animate ? 0 : null),\n      revealOverride = _useState[0],\n      setRevealOverride = _useState[1];\n    React.useEffect(function () {\n      if (props.animate) {\n        // Trigger initial animation\n        setRevealOverride(null);\n      }\n    }, []);\n    var extendedData = extendData(props);\n    return /*#__PURE__*/React.createElement(\"svg\", {\n      viewBox: \"0 0 \" + props.viewBoxSize[0] + \" \" + props.viewBoxSize[1],\n      width: \"100%\",\n      height: \"100%\",\n      className: props.className,\n      style: props.style\n    }, renderSegments(extendedData, props, revealOverride), renderLabels(extendedData, props), props.children);\n  }\n  exports.PieChart = ReactMinimalPieChart;\n  exports.pieChartDefaultProps = defaultProps;\n});","map":{"version":3,"mappings":"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","names":["degreesToRadians","degrees","Math","PI","valueBetween","value","min","max","extractPercentage","percentage","bisectorAngle","startAngle","lengthAngle","shiftVectorAlongAngle","angle","distance","angleRadians","dx","cos","dy","sin","isNumber","functionProp","prop","payload","makePropsWithDefaults","props","defaultProps","result","Object","assign","key","undefined","sumValues","data","sum","i","length","extendData","_ref","totalAngle","totalValue","paddingAngle","chartStartAngle","total","normalizedTotalAngle","numberOfPaddings","abs","singlePaddingDegrees","sign","degreesTakenByPadding","degreesTakenByPaths","lastSegmentEnd","extendedData","dataEntry","valueInPercentage","push","ReactMinimalPieChartLabel","renderLabel","labelProps","label","dataIndex","React","dominantBaseline","isValidElement","round","number","divisor","Number","EPSILON","evaluateTextAnchorPosition","labelPosition","lineWidth","labelHorizontalShift","innerRadius","makeLabelRenderProps","map","index","segmentsShift","distanceFromCenter","radius","labelRenderProps","x","center","y","textAnchor","style","labelStyle","renderLabels","Label","partialCircle","cx","cy","r","start","end","fromX","fromY","toX","toY","large","sweep","module","makePathCommands","patchedLengthAngle","command","join","ReactMinimalPieChartPath","_ref$shift","shift","reveal","rounded","title","pathRadius","pathCommands","strokeDasharray","strokeDashoffset","pathLength","d","fill","strokeWidth","strokeLinecap","combineSegmentTransitionsStyle","duration","easing","customStyle","transition","getRevealValue","animate","makeEventHandler","eventHandler","e","renderSegments","revealOverride","_props$center","paths","segmentsStyle","Path","animationDuration","animationEasing","stroke","color","tabIndex","segmentsTabIndex","onBlur","onClick","onFocus","onKeyDown","onMouseOver","onMouseOut","background","unshift","viewBoxSize","ReactMinimalPieChart","originalProps","useState","setRevealOverride","useEffect","viewBox","width","height","className","children"],"sources":["/Users/mariozegers/Desktop/GPTI/gpti_g4_front/node_modules/react-minimal-pie-chart/src/utils.ts","/Users/mariozegers/Desktop/GPTI/gpti_g4_front/node_modules/react-minimal-pie-chart/src/Chart/extendData.ts","/Users/mariozegers/Desktop/GPTI/gpti_g4_front/node_modules/react-minimal-pie-chart/src/Label.tsx","/Users/mariozegers/Desktop/GPTI/gpti_g4_front/node_modules/react-minimal-pie-chart/src/Chart/renderLabels.tsx","/Users/mariozegers/Desktop/GPTI/gpti_g4_front/node_modules/react-minimal-pie-chart/node_modules/svg-partial-circle/index.js","/Users/mariozegers/Desktop/GPTI/gpti_g4_front/node_modules/react-minimal-pie-chart/src/Path.tsx","/Users/mariozegers/Desktop/GPTI/gpti_g4_front/node_modules/react-minimal-pie-chart/src/Chart/renderSegments.tsx","/Users/mariozegers/Desktop/GPTI/gpti_g4_front/node_modules/react-minimal-pie-chart/src/Chart/Chart.tsx"],"sourcesContent":["export function degreesToRadians(degrees: number) {\n  return (degrees * Math.PI) / 180;\n}\n\nexport function valueBetween(value: number, min: number, max: number) {\n  if (value > max) return max;\n  if (value < min) return min;\n  return value;\n}\n\nexport function extractPercentage(value: number, percentage: number) {\n  return (percentage / 100) * value;\n}\n\nexport function bisectorAngle(startAngle: number, lengthAngle: number) {\n  return startAngle + lengthAngle / 2;\n}\n\nexport function shiftVectorAlongAngle(angle: number, distance: number) {\n  const angleRadians = degreesToRadians(angle);\n  return {\n    dx: distance * Math.cos(angleRadians),\n    dy: distance * Math.sin(angleRadians),\n  };\n}\n\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\nexport function functionProp<Prop, Payload>(\n  prop: Prop,\n  payload?: Payload\n): Prop extends (...args: any) => any ? ReturnType<Prop> : Prop {\n  return typeof prop === 'function' ? prop(payload) : prop;\n}\n\nexport function makePropsWithDefaults<Result extends Object>(\n  props: Partial<Result>,\n  defaultProps: Result\n): Result {\n  const result: Result = Object.assign({}, defaultProps, props);\n\n  // @NOTE Object.assign doesn't default properties with undefined value (like React defaultProps does)\n  for (const key in defaultProps) {\n    if (props[key] === undefined) {\n      result[key] = defaultProps[key];\n    }\n  }\n\n  return result;\n}\n","import { extractPercentage, valueBetween } from '../utils';\nimport type { Data, BaseDataEntry, ExtendedData } from '../commonTypes';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\n\nfunction sumValues<DataEntry extends BaseDataEntry>(\n  data: Data<DataEntry>\n): number {\n  let sum = 0;\n  for (let i = 0; i < data.length; i++) {\n    sum += data[i].value;\n  }\n  return sum;\n}\n\n// Append \"percentage\", \"degrees\" and \"startAngle\" to each data entry\nexport default function extendData<DataEntry extends BaseDataEntry>({\n  data,\n  lengthAngle: totalAngle,\n  totalValue,\n  paddingAngle,\n  startAngle: chartStartAngle,\n}: ChartProps<DataEntry>): ExtendedData<DataEntry> {\n  const total = totalValue || sumValues(data);\n  const normalizedTotalAngle = valueBetween(totalAngle, -360, 360);\n  const numberOfPaddings =\n    Math.abs(normalizedTotalAngle) === 360 ? data.length : data.length - 1;\n  const singlePaddingDegrees = Math.abs(paddingAngle) * Math.sign(totalAngle);\n  const degreesTakenByPadding = singlePaddingDegrees * numberOfPaddings;\n  const degreesTakenByPaths = normalizedTotalAngle - degreesTakenByPadding;\n  let lastSegmentEnd = 0;\n  const extendedData: ExtendedData<DataEntry> = [];\n\n  // @NOTE: Shall we evaluate percentage accordingly to dataEntry.value's sign?\n  for (let i = 0; i < data.length; i++) {\n    const dataEntry = data[i];\n    const valueInPercentage = total === 0 ? 0 : (dataEntry.value / total) * 100;\n    const degrees = extractPercentage(degreesTakenByPaths, valueInPercentage);\n    const startAngle = lastSegmentEnd + chartStartAngle;\n    lastSegmentEnd = lastSegmentEnd + degrees + singlePaddingDegrees;\n    extendedData.push(\n      Object.assign(\n        {\n          percentage: valueInPercentage,\n          startAngle,\n          degrees,\n        },\n        dataEntry\n      )\n    );\n  }\n  return extendedData;\n}\n","import React from 'react';\nimport type { CSSProperties, SVGProps } from 'react';\nimport type {\n  ExtendedData,\n  BaseDataEntry,\n  LabelRenderFunction,\n} from './commonTypes';\n\nexport type LabelRenderProps<DataEntry extends BaseDataEntry> = {\n  x: number;\n  y: number;\n  dx: number;\n  dy: number;\n  textAnchor: string;\n  dataEntry: ExtendedData<DataEntry>[number];\n  dataIndex: number;\n  style?: CSSProperties;\n};\n\nexport default function ReactMinimalPieChartLabel<\n  DataEntry extends BaseDataEntry\n>({\n  renderLabel,\n  labelProps,\n}: {\n  renderLabel: LabelRenderFunction<DataEntry>;\n  labelProps: LabelRenderProps<DataEntry>;\n}) {\n  const label = renderLabel(labelProps);\n\n  // Default label\n  if (typeof label === 'string' || typeof label === 'number') {\n    const { dataEntry, dataIndex, ...props } = labelProps;\n    return (\n      <text dominantBaseline=\"central\" {...props}>\n        {label}\n      </text>\n    );\n  }\n\n  if (React.isValidElement(label)) {\n    return label;\n  }\n\n  return null;\n}\n","import React from 'react';\nimport Label from '../Label';\nimport {\n  bisectorAngle,\n  extractPercentage,\n  functionProp,\n  shiftVectorAlongAngle,\n} from '../utils';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\nimport type { LabelRenderProps } from '../Label';\nimport type { ExtendedData, BaseDataEntry } from '../commonTypes';\n\nfunction round(number: number): number {\n  const divisor = 1e14; // 14 decimals\n  return Math.round((number + Number.EPSILON) * divisor) / divisor;\n}\n\nfunction evaluateTextAnchorPosition({\n  labelPosition,\n  lineWidth,\n  labelHorizontalShift,\n}: {\n  labelPosition: number;\n  lineWidth: number;\n  labelHorizontalShift: number;\n}) {\n  const dx = round(labelHorizontalShift);\n  // Label in the vertical center\n  if (dx === 0) {\n    return 'middle';\n  }\n  // Outward label\n  if (labelPosition > 100) {\n    return dx > 0 ? 'start' : 'end';\n  }\n  // Inward label\n  const innerRadius = 100 - lineWidth;\n  if (labelPosition < innerRadius) {\n    return dx > 0 ? 'end' : 'start';\n  }\n  // Overlying label\n  return 'middle';\n}\n\nfunction makeLabelRenderProps<DataEntry extends BaseDataEntry>(\n  data: ExtendedData<DataEntry>,\n  props: ChartProps<DataEntry>\n): LabelRenderProps<DataEntry>[] {\n  return data.map((dataEntry, index) => {\n    const segmentsShift = functionProp(props.segmentsShift, index) ?? 0;\n    const distanceFromCenter =\n      extractPercentage(props.radius, props.labelPosition) + segmentsShift;\n    const { dx, dy } = shiftVectorAlongAngle(\n      bisectorAngle(dataEntry.startAngle, dataEntry.degrees),\n      distanceFromCenter\n    );\n\n    // This object is passed as argument to the \"label\" function prop\n    const labelRenderProps: LabelRenderProps<DataEntry> = {\n      x: props.center[0],\n      y: props.center[1],\n      dx,\n      dy,\n      textAnchor: evaluateTextAnchorPosition({\n        labelPosition: props.labelPosition,\n        lineWidth: props.lineWidth,\n        labelHorizontalShift: dx,\n      }),\n      dataEntry,\n      dataIndex: index,\n      style: functionProp(props.labelStyle, index),\n    };\n\n    return labelRenderProps;\n  });\n}\n\nexport default function renderLabels<DataEntry extends BaseDataEntry>(\n  data: ExtendedData<DataEntry>,\n  props: ChartProps<DataEntry>\n) {\n  const { label } = props;\n  if (label) {\n    return makeLabelRenderProps(data, props).map((labelRenderProps, index) => (\n      <Label\n        key={`label-${labelRenderProps.dataEntry.key || index}`}\n        renderLabel={label}\n        labelProps={labelRenderProps}\n      />\n    ));\n  }\n}\n","'use strict'\n\n// from http://stackoverflow.com/a/18473154\nconst partialCircle = (cx, cy, r, start, end) => {\n\tconst length = end - start\n\tif (length === 0) return []\n\n\tconst fromX = r * Math.cos(start) + cx\n\tconst fromY = r * Math.sin(start) + cy\n\tconst toX = r * Math.cos(end) + cx\n\tconst toY = r * Math.sin(end) + cy\n\tconst large = Math.abs(length) <= Math.PI ? '0' : '1'\n\tconst sweep = length < 0 ? '0' : '1'\n\n\treturn [\n\t\t['M', fromX, fromY],\n\t\t['A', r, r, 0, large, sweep, toX, toY]\n\t]\n}\n\nmodule.exports = partialCircle\n","import React from 'react';\nimport type { SVGProps } from 'react';\nimport partialCircle from 'svg-partial-circle';\nimport {\n  bisectorAngle,\n  degreesToRadians,\n  extractPercentage,\n  isNumber,\n  shiftVectorAlongAngle,\n  valueBetween,\n} from './utils';\n\nexport function makePathCommands(\n  cx: number,\n  cy: number,\n  startAngle: number,\n  lengthAngle: number,\n  radius: number\n): string {\n  const patchedLengthAngle = valueBetween(lengthAngle, -359.999, 359.999);\n\n  return partialCircle(\n    cx,\n    cy, // center X and Y\n    radius,\n    degreesToRadians(startAngle),\n    degreesToRadians(startAngle + patchedLengthAngle)\n  )\n    .map((command) => command.join(' '))\n    .join(' ');\n}\n\ntype Props = SVGProps<SVGPathElement> & {\n  cx: number;\n  cy: number;\n  lengthAngle: number;\n  lineWidth: number;\n  radius: number;\n  reveal?: number;\n  rounded?: boolean;\n  shift?: number;\n  startAngle: number;\n  title?: string | number;\n};\n\nexport default function ReactMinimalPieChartPath({\n  cx,\n  cy,\n  lengthAngle,\n  lineWidth,\n  radius,\n  shift = 0,\n  reveal,\n  rounded,\n  startAngle,\n  title,\n  ...props\n}: Props) {\n  const pathRadius = radius - lineWidth / 2;\n  //@NOTE This shift might be rendered as a translation in future\n  const { dx, dy } = shiftVectorAlongAngle(\n    bisectorAngle(startAngle, lengthAngle),\n    shift\n  );\n\n  const pathCommands = makePathCommands(\n    cx + dx,\n    cy + dy,\n    startAngle,\n    lengthAngle,\n    pathRadius\n  );\n  let strokeDasharray;\n  let strokeDashoffset;\n\n  // Animate/hide paths with \"stroke-dasharray\" + \"stroke-dashoffset\"\n  // https://css-tricks.com/svg-line-animation-works/\n  if (isNumber(reveal)) {\n    const pathLength = degreesToRadians(pathRadius) * lengthAngle;\n    strokeDasharray = Math.abs(pathLength);\n    strokeDashoffset =\n      strokeDasharray - extractPercentage(strokeDasharray, reveal);\n  }\n\n  return (\n    <path\n      d={pathCommands}\n      fill=\"none\"\n      strokeWidth={lineWidth}\n      strokeDasharray={strokeDasharray}\n      strokeDashoffset={strokeDashoffset}\n      strokeLinecap={rounded ? 'round' : undefined}\n      {...props}\n    >\n      {title && <title>{title}</title>}\n    </path>\n  );\n}\n","import React from 'react';\nimport type { CSSProperties, SyntheticEvent } from 'react';\nimport Path from '../Path';\nimport { extractPercentage, functionProp, isNumber } from '../utils';\nimport type { ExtendedData, BaseDataEntry } from '../commonTypes';\nimport type { PropsWithDefaults as ChartProps } from './Chart';\n\nfunction combineSegmentTransitionsStyle(\n  duration: number,\n  easing: string,\n  customStyle?: CSSProperties\n): { transition: string } {\n  // Merge chart's animation CSS transition with \"transition\" found to customStyle\n  let transition = `stroke-dashoffset ${duration}ms ${easing}`;\n  if (customStyle && customStyle.transition) {\n    transition = `${transition},${customStyle.transition}`;\n  }\n  return {\n    transition,\n  };\n}\n\nfunction getRevealValue<Reveal>(props: { reveal?: Reveal; animate?: boolean }) {\n  //@NOTE When animation is on, chart has to be fully revealed when reveal is not set\n  if (props.animate && !isNumber(props.reveal)) {\n    return 100;\n  }\n  return props.reveal;\n}\n\nfunction makeEventHandler<\n  Event extends SyntheticEvent,\n  Payload,\n  EventHandler extends (event: Event, payload: Payload) => void\n>(eventHandler: undefined | EventHandler, payload: Payload) {\n  return (\n    eventHandler &&\n    ((e: Event) => {\n      eventHandler(e, payload);\n    })\n  );\n}\n\nexport default function renderSegments<DataEntry extends BaseDataEntry>(\n  data: ExtendedData<DataEntry>,\n  props: ChartProps<DataEntry>,\n  revealOverride?: null | number\n) {\n  // @NOTE this should go in Path component. Here for performance reasons\n  const reveal = revealOverride ?? getRevealValue(props);\n  const {\n    radius,\n    center: [cx, cy],\n  } = props;\n  const lineWidth = extractPercentage(radius, props.lineWidth);\n  const paths = data.map((dataEntry, index) => {\n    const segmentsStyle = functionProp(props.segmentsStyle, index);\n    return (\n      <Path\n        cx={cx}\n        cy={cy}\n        key={dataEntry.key || index}\n        lengthAngle={dataEntry.degrees}\n        lineWidth={lineWidth}\n        radius={radius}\n        rounded={props.rounded}\n        reveal={reveal}\n        shift={functionProp(props.segmentsShift, index)}\n        startAngle={dataEntry.startAngle}\n        title={dataEntry.title}\n        style={Object.assign(\n          {},\n          segmentsStyle,\n          props.animate &&\n            combineSegmentTransitionsStyle(\n              props.animationDuration,\n              props.animationEasing,\n              segmentsStyle\n            )\n        )}\n        stroke={dataEntry.color}\n        tabIndex={props.segmentsTabIndex}\n        onBlur={makeEventHandler(props.onBlur, index)}\n        onClick={makeEventHandler(props.onClick, index)}\n        onFocus={makeEventHandler(props.onFocus, index)}\n        onKeyDown={makeEventHandler(props.onKeyDown, index)}\n        onMouseOver={makeEventHandler(props.onMouseOver, index)}\n        onMouseOut={makeEventHandler(props.onMouseOut, index)}\n      />\n    );\n  });\n\n  if (props.background) {\n    paths.unshift(\n      <Path\n        cx={cx}\n        cy={cy}\n        key=\"bg\"\n        lengthAngle={props.lengthAngle}\n        lineWidth={lineWidth}\n        radius={radius}\n        rounded={props.rounded}\n        startAngle={props.startAngle}\n        stroke={props.background}\n      />\n    );\n  }\n\n  return paths;\n}\n","import React, { useState, useEffect } from 'react';\nimport type {\n  CSSProperties,\n  FocusEvent,\n  KeyboardEvent,\n  MouseEvent,\n  ReactNode,\n} from 'react';\nimport extendData from './extendData';\nimport renderLabels from './renderLabels';\nimport renderSegments from './renderSegments';\nimport type { Data, BaseDataEntry, LabelRenderFunction } from '../commonTypes';\nimport { makePropsWithDefaults } from '../utils';\n\nexport type Props<DataEntry extends BaseDataEntry = BaseDataEntry> = {\n  animate?: boolean;\n  animationDuration?: number;\n  animationEasing?: string;\n  background?: string;\n  center?: [number, number];\n  children?: ReactNode;\n  className?: string;\n  data: Data<DataEntry>;\n  lengthAngle?: number;\n  lineWidth?: number;\n  label?: LabelRenderFunction<DataEntry>;\n  labelPosition?: number;\n  labelStyle?:\n    | CSSProperties\n    | ((dataIndex: number) => CSSProperties | undefined);\n  onBlur?: (event: FocusEvent, dataIndex: number) => void;\n  onClick?: (event: MouseEvent, dataIndex: number) => void;\n  onFocus?: (event: FocusEvent, dataIndex: number) => void;\n  onKeyDown?: (event: KeyboardEvent, dataIndex: number) => void;\n  onMouseOut?: (event: MouseEvent, dataIndex: number) => void;\n  onMouseOver?: (event: MouseEvent, dataIndex: number) => void;\n  paddingAngle?: number;\n  radius?: number;\n  reveal?: number;\n  rounded?: boolean;\n  segmentsShift?: number | ((dataIndex: number) => number | undefined);\n  segmentsStyle?:\n    | CSSProperties\n    | ((dataIndex: number) => CSSProperties | undefined);\n  segmentsTabIndex?: number;\n  startAngle?: number;\n  style?: CSSProperties;\n  totalValue?: number;\n  viewBoxSize?: [number, number];\n};\n\nexport const defaultProps = {\n  animationDuration: 500,\n  animationEasing: 'ease-out',\n  center: [50, 50] as [number, number],\n  data: [] as Data,\n  labelPosition: 50,\n  lengthAngle: 360,\n  lineWidth: 100,\n  paddingAngle: 0,\n  radius: 50,\n  startAngle: 0,\n  viewBoxSize: [100, 100] as [number, number],\n};\n\nexport type PropsWithDefaults<\n  DataEntry extends BaseDataEntry\n> = Props<DataEntry> & typeof defaultProps;\n\nexport function ReactMinimalPieChart<DataEntry extends BaseDataEntry>(\n  originalProps: Props<DataEntry>\n) {\n  const props = makePropsWithDefaults<PropsWithDefaults<DataEntry>>(\n    originalProps,\n    // @ts-expect-error: defaultProps.data is typed as BaseDataEntry\n    defaultProps\n  );\n  const [revealOverride, setRevealOverride] = useState(\n    props.animate ? 0 : null\n  );\n\n  useEffect(() => {\n    if (props.animate) {\n      // Trigger initial animation\n      setRevealOverride(null);\n    }\n  }, []);\n\n  const extendedData = extendData(props);\n  return (\n    <svg\n      viewBox={`0 0 ${props.viewBoxSize[0]} ${props.viewBoxSize[1]}`}\n      width=\"100%\"\n      height=\"100%\"\n      className={props.className}\n      style={props.style}\n    >\n      {renderSegments(extendedData, props, revealOverride)}\n      {renderLabels(extendedData, props)}\n      {props.children}\n    </svg>\n  );\n}\n"]},"metadata":{},"sourceType":"script"}